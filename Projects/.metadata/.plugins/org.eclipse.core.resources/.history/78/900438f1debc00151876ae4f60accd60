package spell;

public class Dictionary implements ITrie{

	Dictionary(){
		root = new Node();
	}
	private Node root;
	private int nodeCount;
	@Override
	public void add(String word) {
		// TODO Auto-generated method stub
		insertReflexive(root, word, 0, word.length());
	}
	
	public void insertReflexive(Node n, String s, int i, int max){
		if(n.nodes[s.charAt(i)] == null){
			n.nodes[s.charAt(i)] = new Node();
		}
		if(i==max){
			n.nodes[s.charAt(i)].increaseCount();
			return;
		}
		else{
			insertReflexive(n.nodes[s.charAt(i)],s,++i,max);
		}
	}

	@Override
	public INode find(String word) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public int getWordCount() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public int getNodeCount() {
		// TODO Auto-generated method stub
		return 0;
	}

}
